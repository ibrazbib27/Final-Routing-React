{"ast":null,"code":"var _jsxFileName = \"/Applications/Brackets.app/Contents/samples/root/Getting Started/routing-react-app/src/components/PeopleInfo.jsx\";\nimport React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Aside from './Aside';\n\nclass FilmInfo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      render: false,\n      cardDetails: [],\n      films: []\n    };\n    this.getFilms = this.getFilms.bind(this);\n  }\n\n  getFilms(personFilms) {\n    let arr = [];\n    personFilms.map(url => {\n      fetch(url).then(res => res.json()).then(obj => {\n        let myFilms = {\n          title: `${obj.title}`,\n          id: `${obj.id}`\n        };\n        arr.push(myFilms);\n      });\n    });\n    return arr;\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    let arr = [];\n    fetch(`https://ghibliapi.herokuapp.com/people/${params.id}`).then(res => res.json()).then(obj => {\n      arr[0] = obj;\n      this.setState({\n        cardDetails: arr,\n        render: false\n      });\n    });\n  }\n\n  render() {\n    const people = this.state.cardDetails.map(person => /*#__PURE__*/React.createElement(Col, {\n      key: this.state.render ? person.id : null,\n      xs: 12,\n      className: \"w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"w-100 p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      lg: 5,\n      md: 6,\n      className: \"order-1 order-md-2 mb-3 mb-lg-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Aside, {\n      render: this.state.render,\n      info: person,\n      films: getFilms(person.films),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    })))));\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, people);\n  }\n\n}\n\nexport default FilmInfo;","map":{"version":3,"sources":["/Applications/Brackets.app/Contents/samples/root/Getting Started/routing-react-app/src/components/PeopleInfo.jsx"],"names":["React","Component","Col","Row","Aside","FilmInfo","constructor","state","render","cardDetails","films","getFilms","bind","personFilms","arr","map","url","fetch","then","res","json","obj","myFilms","title","id","push","componentDidMount","match","params","props","setState","people","person"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Aside from './Aside';\n\n\nclass FilmInfo extends Component {\n    constructor(){\n        super();\n        this.state = {\n            render: false,\n            cardDetails: [],\n            films : []\n           \n        }\n   this.getFilms = this.getFilms.bind(this);\n\n    }\ngetFilms(personFilms) {\n    let arr = [];\n      personFilms.map((url)=>{\n       fetch(url)\n            .then(res =>  res.json())\n            .then(obj => {\n           let myFilms = {title:`${obj.title}`, id:`${obj.id}`};\n            arr.push(myFilms);\n        });\n       });\n    return arr;\n    }\n    componentDidMount() {\n       const{match: {params}} = this.props;\n     let arr = [];\n        fetch(`https://ghibliapi.herokuapp.com/people/${params.id}`)\n            .then(res =>  res.json())\n            .then(obj => {\n            arr[0] = obj;\n         \n             this.setState({\n                cardDetails: arr,\n                 render: false\n            })\n        });\n \n    }\n\n\n    \n    render(){\n\n             const people = this.state.cardDetails.map((person) =>\n    <Col key={this.state.render ? person.id : null} xs={12}  className=\"w-100\">\n    <Row className=\"w-100 p-3\">\n    \n        <Col xs={12} lg={5} md={6}className=\"order-1 order-md-2 mb-3 mb-lg-0\">\n    <Aside render={this.state.render} info={person} films={getFilms(person.films)}/>\n        </Col>\n       \n    </Row>\n   \n    </Col>\n\n    );\n         \n        return(\n          <Row >\n  {people}\n          </Row>\n        );\n    }\n\n}\nexport default FilmInfo;"]},"metadata":{},"sourceType":"module"}