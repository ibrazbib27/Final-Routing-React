{"ast":null,"code":"import React, { Component } from \"react\";\n\nclass PersonDesc extends Component {\n  constructor() {\n    super();\n    this.state = {\n      end: false,\n      character: [{}]\n    };\n  }\n\n  componentDidMount() {\n    let arr = [];\n    fetch(`${this.props.info.species}`).then(res => res.json()).then(obj => {\n      let person = {\n        name: `${this.props.info.name}`,\n        species: obj.name.toLowerCase(),\n        eyes: `${this.props.info.eye_color}`.toLowerCase(),\n        hair: `${this.props.info.hair_color}`.toLowerCase(),\n        films: `${this.props.info.films.length}`\n      };\n      arr.push(person);\n      this.setState({\n        character: arr\n      });\n    });\n  }\n\n  render() {\n    const species = this.state.character.map(desc => /*#__PURE__*/React.createElement(React.Fragment, null, \"is a \", desc.species, \" with \", desc.eyes, \" eyes and\", \" \", `${desc.hair}`.includes(\"bald\") ? `is ${desc.hair}.` : `has ${desc.hair} hair.`, \" \", desc.name, \" has appeared in \", desc.films, \" film(s).\"));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, species);\n  }\n\n}\n\nexport default PersonDesc;","map":{"version":3,"sources":["/Applications/Brackets.app/Contents/samples/root/Getting Started/final-route/src/components/People/PersonDesc.jsx"],"names":["React","Component","PersonDesc","constructor","state","end","character","componentDidMount","arr","fetch","props","info","species","then","res","json","obj","person","name","toLowerCase","eyes","eye_color","hair","hair_color","films","length","push","setState","render","map","desc","includes"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AACjCE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,KADM;AAEXC,MAAAA,SAAS,EAAE,CAAC,EAAD;AAFA,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,GAAG,GAAG,EAAV;AAEAC,IAAAA,KAAK,CAAE,GAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAAQ,EAA5B,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,GAAD,IAAS;AACb,UAAIC,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAG,GAAE,KAAKR,KAAL,CAAWC,IAAX,CAAgBO,IAAK,EADnB;AAEXN,QAAAA,OAAO,EAAEI,GAAG,CAACE,IAAJ,CAASC,WAAT,EAFE;AAGXC,QAAAA,IAAI,EAAG,GAAE,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,SAAU,EAA7B,CAA+BF,WAA/B,EAHK;AAIXG,QAAAA,IAAI,EAAG,GAAE,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,UAAW,EAA9B,CAAgCJ,WAAhC,EAJK;AAKXK,QAAAA,KAAK,EAAG,GAAE,KAAKd,KAAL,CAAWC,IAAX,CAAgBa,KAAhB,CAAsBC,MAAO;AAL5B,OAAb;AAOAjB,MAAAA,GAAG,CAACkB,IAAJ,CAAST,MAAT;AACA,WAAKU,QAAL,CAAc;AACZrB,QAAAA,SAAS,EAAEE;AADC,OAAd;AAGD,KAdH;AAeD;;AAEDoB,EAAAA,MAAM,GAAG;AACP,UAAMhB,OAAO,GAAG,KAAKR,KAAL,CAAWE,SAAX,CAAqBuB,GAArB,CAA0BC,IAAD,iBACvC,mDACQA,IAAI,CAAClB,OADb,YAC4BkB,IAAI,CAACV,IADjC,eACgD,GADhD,EAEI,GAAEU,IAAI,CAACR,IAAK,EAAb,CAAeS,QAAf,CAAwB,MAAxB,IACI,MAAKD,IAAI,CAACR,IAAK,GADnB,GAEI,OAAMQ,IAAI,CAACR,IAAK,QAJvB,EAIgC,GAJhC,EAKGQ,IAAI,CAACZ,IALR,uBAK+BY,IAAI,CAACN,KALpC,cADc,CAAhB;AAUA,wBAAO,0CAAGZ,OAAH,CAAP;AACD;;AAxCgC;;AA0CnC,eAAeV,UAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass PersonDesc extends Component {\n  constructor() {\n    super();\n    this.state = {\n      end: false,\n      character: [{}],\n    };\n  }\n  componentDidMount() {\n    let arr = [];\n\n    fetch(`${this.props.info.species}`)\n      .then((res) => res.json())\n      .then((obj) => {\n        let person = {\n          name: `${this.props.info.name}`,\n          species: obj.name.toLowerCase(),\n          eyes: `${this.props.info.eye_color}`.toLowerCase(),\n          hair: `${this.props.info.hair_color}`.toLowerCase(),\n          films: `${this.props.info.films.length}`,\n        };\n        arr.push(person);\n        this.setState({\n          character: arr\n        });\n      });\n  }\n\n  render() {\n    const species = this.state.character.map((desc) => (\n      <>\n        is a {desc.species} with {desc.eyes} eyes and{\" \"}\n        {`${desc.hair}`.includes(\"bald\")\n          ? `is ${desc.hair}.`\n          : `has ${desc.hair} hair.`}{\" \"}\n        {desc.name} has appeared in {desc.films} film(s).\n      </>\n    ));\n\n    return <>{species}</>;\n  }\n}\nexport default PersonDesc;\n"]},"metadata":{},"sourceType":"module"}